Shell sort algorithm is taken from Mark Weiss algorithm book.
k=1,
Total #Pre:1 #POST: 1
Method {|intelement.Sort.spex_M_shellsort([I)V|}: Total num of branches is 8 covered is 4 branch coverage is 0.5 Total num of location is 58 num of covered location is 35
Method MAIN: Total num of branches is 0 covered is 0 branch coverage is NaN Total num of location is 9 num of covered location is 9
Method {|intelement.Sort.shellsort$Top([I)V|}: Total num of branches is 4 covered is 3 branch coverage is 0.75 Total num of location is 29 num of covered location is 26
Method {|intelement.Sort.isSorted([I)Z|}: Total num of branches is 4 covered is 1 branch coverage is 0.25 Total num of location is 25 num of covered location is 12
k=2,
Total #Pre:1 #POST: 3
Method {|intelement.Sort.spex_M_shellsort([I)V|}: Total num of branches is 8 covered is 8 branch coverage is 1.0 Total num of location is 58 num of covered location is 58
Method MAIN: Total num of branches is 0 covered is 0 branch coverage is NaN Total num of location is 9 num of covered location is 9
Method {|intelement.Sort.shellsort$Top([I)V|}: Total num of branches is 4 covered is 3 branch coverage is 0.75 Total num of location is 29 num of covered location is 26
Method {|intelement.Sort.isSorted([I)Z|}: Total num of branches is 4 covered is 3 branch coverage is 0.75 Total num of location is 25 num of covered location is 23

Similarly the insertion sort.
k=1,
Total #Pre:1 #POST: 1
Method MAIN: Total num of branches is 0 covered is 0 branch coverage is NaN Total num of location is 9 num of covered location is 9
Method {|intelement.Sort.insertionSort$Top([I)V|}: Total num of branches is 4 covered is 3 branch coverage is 0.75 Total num of location is 29 num of covered location is 26
Method {|intelement.Sort.isSorted([I)Z|}: Total num of branches is 4 covered is 1 branch coverage is 0.25 Total num of location is 25 num of covered location is 12
Method {|intelement.Sort.spex_M_insertionSort([I)V|}: Total num of branches is 6 covered is 3 branch coverage is 0.5 Total num of location is 41 num of covered location is 25

k=2,
Total #Pre:1 #POST: 3
Method MAIN: Total num of branches is 0 covered is 0 branch coverage is NaN Total num of location is 9 num of covered location is 9
Method {|intelement.Sort.insertionSort$Top([I)V|}: Total num of branches is 4 covered is 3 branch coverage is 0.75 Total num of location is 29 num of covered location is 26
Method {|intelement.Sort.isSorted([I)Z|}: Total num of branches is 4 covered is 3 branch coverage is 0.75 Total num of location is 25 num of covered location is 23
Method {|intelement.Sort.spex_M_insertionSort([I)V|}: Total num of branches is 6 covered is 6 branch coverage is 1.0 Total num of location is 41 num of covered location is 41

