/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 08 23:06:46 GMT 2021
 */

package list;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import list.StackLi;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackLi_ESTest extends StackLi_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.push("");
      stackLi0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackLi.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.push("$=t?9G`,Y+|Qlg60x");
      Object object0 = stackLi0.topAndPop();
      assertEquals("$=t?9G`,Y+|Qlg60x", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      try { 
        stackLi0.pop();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("list.StackLi", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.push("$=t?9G`,Y+|Qlg60x");
      stackLi0.pop();
      assertFalse(stackLi0.isFull());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      Object object0 = stackLi0.top();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.push("$=t?9G`,Y+|Qlg60x");
      stackLi0.push("$=t?9G`,Y+|Qlg60x");
      boolean boolean0 = stackLi0.isAcyclic();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      Object object0 = stackLi0.topAndPop();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.push("$=t?9G`,Y+|Qlg60x");
      stackLi0.top();
      assertFalse(stackLi0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      stackLi0.makeEmpty();
      assertFalse(stackLi0.isFull());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackLi stackLi0 = new StackLi();
      boolean boolean0 = stackLi0.isFull();
      assertFalse(boolean0);
  }
}
