/*
 * This file was automatically generated by EvoSuite
 * Wed Dec 08 22:46:53 GMT 2021
 */

package intelement;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import intelement.ArrayPartition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArrayPartition_ESTest extends ArrayPartition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      arrayPartition0.n = (-1268);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1268);
      intArray0[2] = (-1268);
      arrayPartition0.a = intArray0;
      arrayPartition0.n = (-2486);
      arrayPartition0.n = (-2486);
      arrayPartition0.n = 3;
      arrayPartition0.partition();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[9];
      intArray0[2] = 2361;
      intArray0[3] = 3317;
      arrayPartition0.a = intArray0;
      arrayPartition0.isWeaklySorted();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      // Undeclared exception!
      try { 
        arrayPartition0.isWeaklySorted();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("intelement.ArrayPartition", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      // Undeclared exception!
      try { 
        arrayPartition0.partition();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("intelement.ArrayPartition", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[4];
      arrayPartition0.n = 836;
      arrayPartition0.a = intArray0;
      arrayPartition0.n = 836;
      arrayPartition0.n = 2;
      arrayPartition0.partition();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[4];
      intArray0[0] = 1680;
      arrayPartition0.n = 1680;
      arrayPartition0.a = intArray0;
      // Undeclared exception!
      try { 
        arrayPartition0.partition();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("intelement.ArrayPartition", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[4];
      intArray0[0] = 2;
      arrayPartition0.n = 836;
      arrayPartition0.a = intArray0;
      arrayPartition0.n = 836;
      arrayPartition0.n = 2;
      arrayPartition0.partition();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[0];
      arrayPartition0.a = intArray0;
      arrayPartition0.isWeaklySorted();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[3];
      intArray0[1] = (-5249);
      arrayPartition0.a = intArray0;
      arrayPartition0.isWeaklySorted();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ArrayPartition arrayPartition0 = new ArrayPartition();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1096);
      arrayPartition0.a = intArray0;
      intArray0[2] = (-3090);
      arrayPartition0.isWeaklySorted();
  }
}
